# Generated by Django 5.2 on 2025-04-19 20:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('python_module', models.CharField(help_text="Name of the Python module to run (e.g., 'ping_scanner')", max_length=255)),
                ('description', models.TextField(blank=True)),
                ('command', models.CharField(blank=True, max_length=255)),
                ('output_format', models.CharField(choices=[('json', 'JSON'), ('text', 'Text'), ('xml', 'XML'), ('csv', 'CSV')], default='json', max_length=50)),
                ('enabled', models.BooleanField(default=True)),
                ('config', models.JSONField(blank=True, default=dict, help_text='Module configuration (will be saved as YAML)')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('asset_type', models.CharField(choices=[('domain', 'Domain'), ('subdomain', 'Subdomain')], max_length=20)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('registrar', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_subdomains', to='scanner.asset')),
                ('tags', models.ManyToManyField(blank=True, to='scanner.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='queued', max_length=10)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('task_id', models.CharField(blank=True, max_length=50, null=True)),
                ('output', models.TextField(blank=True, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanner.asset')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scanner.module')),
            ],
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='low', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scanner.asset')),
                ('scan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scanner.scan')),
            ],
        ),
        migrations.CreateModel(
            name='ScanQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('scan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='scanner.scan')),
            ],
        ),
        migrations.CreateModel(
            name='Subdomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_subdomains', to='scanner.asset')),
                ('tags', models.ManyToManyField(blank=True, to='scanner.tag')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='scan',
            name='subdomain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scanner.subdomain'),
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.IntegerField()),
                ('protocol', models.CharField(choices=[('tcp', 'TCP'), ('udp', 'UDP')], default='tcp', max_length=10)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='scanner.asset')),
                ('findings', models.ManyToManyField(blank=True, related_name='ports', to='scanner.finding')),
                ('scans', models.ManyToManyField(blank=True, related_name='ports', to='scanner.scan')),
                ('subdomain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='scanner.subdomain')),
            ],
        ),
        migrations.AddField(
            model_name='finding',
            name='subdomain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scanner.subdomain'),
        ),
        migrations.CreateModel(
            name='PortScreenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screenshot', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('protocol', models.CharField(choices=[('http', 'HTTP'), ('https', 'HTTPS')], default='http', max_length=10)),
                ('port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='scanner.port')),
                ('subdomain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='scanner.subdomain')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('subdomain', 'port', 'protocol')},
            },
        ),
        migrations.AddConstraint(
            model_name='port',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('asset__isnull', False), ('subdomain__isnull', True)), models.Q(('asset__isnull', True), ('subdomain__isnull', False)), _connector='OR'), name='port_belongs_to_either_asset_or_subdomain'),
        ),
        migrations.AlterUniqueTogether(
            name='port',
            unique_together={('asset', 'port', 'protocol'), ('subdomain', 'port', 'protocol')},
        ),
        migrations.AlterUniqueTogether(
            name='finding',
            unique_together={('asset', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='subdomain',
            unique_together={('name', 'asset')},
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['name'], name='scanner_ass_name_41ab19_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_type'], name='scanner_ass_asset_t_42c064_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['is_favorite'], name='scanner_ass_is_favo_44fb5d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='asset',
            unique_together={('name', 'asset_type')},
        ),
    ]
